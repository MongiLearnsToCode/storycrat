
import { Story } from './convex-store'



export function exportToTxt(story: Story) {
  const completedBeats = story.beats.filter(beat => beat.completed).length
  const progress = Math.round((completedBeats / story.beats.length) * 100)
  
  let content = ''
  
  // Header with theme styling
  content += '═'.repeat(80) + '\n'
  content += `  ${story.title.toUpperCase()}\n`
  content += '═'.repeat(80) + '\n\n'
  
  // Metadata
  content += `Framework:     ${story.framework.replace('-', ' ').toUpperCase()}\n`
  content += `Progress:      ${completedBeats}/${story.beats.length} beats completed (${progress}%)\n`
  content += `Last Edited:   ${new Date(story.lastEdited).toLocaleDateString('en-US', { 
    weekday: 'long', 
    year: 'numeric', 
    month: 'long', 
    day: 'numeric' 
  })}\n\n`
  
  // Story Structure
  content += '─'.repeat(80) + '\n'
  content += '  STORY STRUCTURE\n'
  content += '─'.repeat(80) + '\n\n'
  
  story.beats.forEach((beat, index) => {
    const status = beat.completed ? '✓' : '○'
    
    content += `${index + 1}. ${beat.title.toUpperCase()} ${status}\n`
    content += `   ${beat.description}\n\n`
    
    if (beat.content) {
      // Format content with proper line breaks
      const lines = beat.content.split('\n')
      lines.forEach(line => {
        if (line.trim()) {
          content += `   ${line.trim()}\n`
        } else {
          content += '\n'
        }
      })
    } else {
      content += '   [This beat has not been written yet]\n'
    }
    content += '\n' + '·'.repeat(60) + '\n\n'
  })
  
  // Characters
  if (story.characters.length > 0) {
    content += '─'.repeat(80) + '\n'
    content += '  CHARACTER PROFILES\n'
    content += '─'.repeat(80) + '\n\n'
    
    story.characters.forEach((char, index) => {
      content += `${index + 1}. ${char.name.toUpperCase()}\n`
      content += `   Role: ${char.role}\n`
      content += `   Description: ${char.description}\n\n`
    })
  }
  
  // Footer
  content += '═'.repeat(80) + '\n'
  content += `  Generated by StoryGenPro on ${new Date().toLocaleDateString()}\n`
  content += '═'.repeat(80) + '\n'
  
  const blob = new Blob([content], { type: 'text/plain;charset=utf-8' })
  const url = URL.createObjectURL(blob)
  const a = document.createElement('a')
  a.href = url
  a.download = `${story.title.replace(/[^a-z0-9]/gi, '_').toLowerCase()}_story.txt`
  a.click()
  URL.revokeObjectURL(url)
}


